/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.create;

import controller.PagamentoController;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import view.read.ResidenciaView;

/**
 *
 * @author android
 */
public class PagamentoView extends javax.swing.JFrame {
    private int idResidencia;
    private PagamentoController controller;
    private ResidenciaView residenciaView;

    public PagamentoView(int idResidencia, ResidenciaView residenciaView) {
        this.idResidencia = idResidencia;
        this.residenciaView = residenciaView;
        this.controller = new PagamentoController();
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE); // pra não fechar todo o programa ao clicar no X
        setTitle("Pagamentos da Residência " + idResidencia);
        carregarPagamentos();
        setLocationRelativeTo(null);
    }

    public static PagamentoView abrirComResidencia(int idResidencia, ResidenciaView residenciaView) {
        return new PagamentoView(idResidencia, residenciaView);
    }

    public void carregarPagamentos() {
        try {
            List<Map<String, Object>> lista = controller.listarPagamentosPorResidencia(idResidencia);

            String[] colunas = {"ID", "Mês", "Ano", "Valor", "Pago", "Data Pagamento", "Responsável"};
            DefaultTableModel modelo = new DefaultTableModel(colunas, 0);

            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");

            lista.forEach(item -> {
                modelo.addRow(new Object[]{
                    item.get("id"),
                    item.get("mes"),
                    item.get("ano"),
                    item.get("valor"),
                    (boolean) item.get("pago") ? "Sim" : "Não",
                    item.get("data_pagamento") != null
                        ? formatter.format((LocalDate) item.get("data_pagamento"))
                        : "",
                    item.get("responsavel")
                });
            });

            tblPagamento.setModel(modelo);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar pagamentos: " + e.getMessage());
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPagamento = new javax.swing.JTable();
        btnRegistrarPagamento = new javax.swing.JButton();
        btnPagar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(242, 245, 247));

        jLabel5.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(66, 66, 66));
        jLabel5.setText(" Cadastro de Residência");

        tblPagamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Mês", "Ano", "Valor", "Pago", "Data pagamento", "Responsável"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Boolean.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPagamento);

        btnRegistrarPagamento.setFont(new java.awt.Font("Sans Serif Collection", 1, 14)); // NOI18N
        btnRegistrarPagamento.setForeground(new java.awt.Color(66, 66, 66));
        btnRegistrarPagamento.setText("Registrar Pagamento");
        btnRegistrarPagamento.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(110, 158, 158), 3, true));
        btnRegistrarPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarPagamentoActionPerformed(evt);
            }
        });

        btnPagar.setFont(new java.awt.Font("Sans Serif Collection", 1, 14)); // NOI18N
        btnPagar.setText("Pagar");
        btnPagar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(110, 158, 158), 3, true));
        btnPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagarActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Sans Serif Collection", 1, 12)); // NOI18N
        jButton1.setText("Voltar");
        jButton1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(110, 158, 158), 3, true));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 717, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnRegistrarPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(53, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(280, 280, 280))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(24, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRegistrarPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarPagamentoActionPerformed
        RegistrarPagamentoView tela = new RegistrarPagamentoView(idResidencia, this, residenciaView);
        tela.setVisible(true);
    }//GEN-LAST:event_btnRegistrarPagamentoActionPerformed

    private void btnPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagarActionPerformed
        int linha = tblPagamento.getSelectedRow();
        if (linha == -1) {
            JOptionPane.showMessageDialog(this, "Selecione um pagamento para marcar como pago.");
            return;
        }

        int idPagamento = (int) tblPagamento.getValueAt(linha, 0);

        try {
            controller.pagar(idPagamento);
            JOptionPane.showMessageDialog(this, "Pagamento realizado com sucesso!");
            carregarPagamentos();

            // 🔥 Atualiza tabela da residência também
            if (residenciaView != null) {
                residenciaView.carregarDados();
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erro ao realizar pagamento: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnPagarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPagar;
    private javax.swing.JButton btnRegistrarPagamento;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPagamento;
    // End of variables declaration//GEN-END:variables
}
